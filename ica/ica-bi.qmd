---
title: "Bivariate Viz"
---

Use this file for practice with the **bivariate viz** in-class activity.  Refer to the class website for details.

```{r}
# Load data
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")

# Check it out
head(elections)
```
How many, or roughly what percent, of the 3000+ counties did the Republican candidate win in 2020?

- Take a guess. 65%
- Then make a plot of the winner variable.
```{r}
library(tidyverse)
ggplot(elections, aes(x = winner_20)) +
  geom_bar()
labs(x = "Party", y = "Number of Counties")
```

- Then discuss what follow-up questions you might have (and that our data might help us answer). What is the population of each county? How many counties flipped in 2020? 
\
```{r}
ggplot(elections, aes(x = repub_pct_20)) +
 geom_histogram(binwidth = 10) + 
labs(x = "Republican Support", y = "Number of Counties")
```
What follow-up questions do you have? How has this trend changed over time? What does the skewed data actually represent?

```{r}
# Set up the plotting frame
# How does this differ than the frame for our histogram of repub_pct_20 alone? Both axes are numeric variables we're studying
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))
```
```{r}
# Add a layer of points for each county
# Take note of the geom! geom point
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point()
```

```{r}
# Change the shape of the points
# What happens if you change the shape to another number? The shape of the points change
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point(shape = 3)
```
```{r}
# YOU TRY: Modify the code to make the points "orange"
# NOTE: Try to anticipate if "color" or "fill" will be useful here. Then try both.
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point(color = "red", fill = "blue")
```
```{r}
# Add a layer that represents each county by the state it's in
# Take note of the geom and the info it needs to run! text instead of point, label as changed to state abbr
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_text(aes(label = state_abbr))
```
Summarize the relationship between the Republican support in 2020 and 2016. Be sure to comment on:

- the strength of the relationship (weak/moderate/strong) very strong relationship, it's pretty linear 
- the direction of the relationship (positive/negative) positive slope
- outliers (in what state do counties deviate from the national trend? Any ideas why this might be the case?) I see a few in Texas, there's been a shift in recent years in big cities to be more democratic, especially amongst the migrant population

```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_smooth()
```


```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point() +
  geom_smooth(method = "lm")
```
```{r}
# Scatterplot of repub_pct_20 vs median_rent
ggplot(elections, aes(y = repub_pct_20, x = median_rent)) +
  geom_point()  +
  geom_smooth()


# Scatterplot of repub_pct_20 vs median_age
ggplot(elections, aes(y = repub_pct_20, x = median_age)) +
  geom_point() +
   geom_smooth()
```
- Summarize the relationship between these two variables and comment on which is the better predictor of repub_pct_20, median_rent or median_age. Median rent is a bit of a negative relationship, while median age is a bit more positive and linear. Based off of this, it seems like age is a better predictor 

- Explain why a scatterplot might not be an effective visualization for exploring this relationship. (What questions does / doesn’t it help answer?) Doesn't really show the patterns over time, makes it harder to see a clear relationship between all of the variables

```{r}
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_point()
```
```{r}
# Side-by-side violin plots
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_violin()
```
```{r}
# Side-by-side boxplots (defined below)
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_boxplot()
```

- Summarize what you’ve learned about the 2020 Republican county-level support within and between red/purple/blue states. In blue states, it's a bit above 50, in purple states it's around 60, and in red states it's about 75. However, red states usually have more and lower outliers than in blue or purple states. Otherwise, most of the points are in a pretty similar place. 

```{r}
ggplot(elections, aes(x = repub_pct_20)) +
  geom_density()
```
```{r}
# Name two "bad" things about this plot. No axis labels, the colors aren't aligned with their labels
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density()
```

```{r}
# What does scale_fill_manual do? Allows labels to be filled with chosen colors, in the order of the variables
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density() +
  scale_fill_manual(values = c("blue", "purple", "red"))
```
```{r}
# What does alpha = 0.5 do? Makes the fill more transparent
# Play around with different values of alpha, between 0 and 1
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density(alpha = 0.6) +
  scale_fill_manual(values = c("blue", "purple", "red"))
```
```{r}
# What does facet_wrap do?! Seperates the layers of graphs into three distinct graphs
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density() +
  scale_fill_manual(values = c("blue", "purple", "red")) +
  facet_wrap(~ historical)
```
```{r}
# Let's try a similar grouping strategy with a histogram instead of density plot.
# Why is this terrible? The layering of graphs is hard to see, the data doesn't seem to flow well, it's just a more visually clunky version of the density plot
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_histogram(color = "white") +
  scale_fill_manual(values = c("blue", "purple", "red"))
```
We’ve now learned 3 (of many) ways to visualize the relationship between a quantitative and categorical variable: side-by-side violins, boxplots, and density plots.

- Which do you like best? Box plots, it makes the data so easy to observe and comment on
- What is one pro of density plots relative to boxplots? It makes data easy to see in comparison to one another
- What is one con of density plots relative to boxplots? It only works if both values are quantitative

```{r}
# Plot 1: adjust this to recreate the top plot
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar()
```
```{r}
# Plot 2: adjust this to recreate the bottom plot
ggplot(elections, aes(x = winner_20)) +
  geom_bar() +
  facet_wrap(~ historical)
```
```{r}
# A stacked bar plot
# How are the "historical" and "winner_20" variables mapped to the plot, i.e. what roles do they play? Fill lets us see the actual margins and comparisons of the data
ggplot(elections, aes(x = historical, , fill = winner_20)) +
  geom_bar()
```
- Name one pro and one con of using the “proportional bar plot” instead of one of the other three options. pro = easier to visually see the margins of the winners per party, con = it can make it a bit confusing when trying to explain how the historical margin is the x axis

- What’s your favorite bar plot from part and why? the facet wrap, I like how it compares each individual part of data, it makes it really easy for me to see the different patterns per state, and easier to focus on both each one by itself and in comparison to others

```{r}
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv")
```

```{r}
# How do 3pm temperatures (temp3pm) differ by location?
ggplot(weather, aes(x = temp3pm, fill = location)) +
  geom_density(alpha = 0.6) 

```

```{r}
# How might we predict the 3pm temperature (temp3pm) by the 9am temperature (temp9am)?
ggplot(weather, aes(y = temp3pm, x = temp9am)) +
  geom_point() + 
  geom_smooth()

```
```{r}
# How do the number of rainy days (raintoday) differ by location?
ggplot(weather, aes(x = raintoday)) +
  geom_bar() +
  facet_wrap(~ location)

```

