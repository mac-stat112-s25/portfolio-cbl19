---
title: "BestWork"
format: html
---

```{r}
# Loading libraries
library(tidyverse)
library(openintro)
library(sf)
library(maps)
library(leaflet)
library(gplots)
library(mosaic)
```

::: callout-note
Univariable Viz:
:::

```{r}
# Importing data
hikes <- read.csv("https://mac-stat.github.io/data/high_peaks.csv")
#Graphing relationship between number of hikes and elevation of each
ggplot(hikes, aes(x = elevation)) +
  geom_histogram(color = "white", fill = "pink", binwidth = 200) +
  labs(x = "Elevation (feet)", y = "Number of hikes")
```

::: callout-note
Bivariable Viz:
:::

```{r}
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")
# Graphing the relationship between historical and current republican support for US counties in 2020
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density(alpha = 0.6) +
  scale_fill_manual(values = c("blue", "purple", "red")) +
  labs(x = "2020 Republican Support", y = "Density")

```

::: {.callout-note title="Multivariable Viz"}
Three variables:
:::

```{r}
#Births per year 1970-1985 per month as trivariable relationship
data("Birthdays")
daily_births <- Birthdays |> 
  group_by(date) |> 
  summarize(births = sum(births)) |> 
  mutate(year = year(date), 
         month = month(date, label = TRUE),
         day_of_month = mday(date),
         day_of_week = wday(date, label = TRUE))

ggplot(daily_births, aes(y= births, color = month, x = year)) + 
  geom_point() + 
  geom_smooth(method = "lm") +
  labs(x = "Year", y = "Births", color = "Month")

```

::: {.callout-note title="Multivariable Viz"}
Four variables:
:::

```{r}
# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |> 
  mutate(date = as.Date(date))  
#Observing the temperature of 3 different locations at 9am, 3pm, and facet wrap seeing if it rained that day
ggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + 
  geom_point() +
  facet_wrap(~ raintoday) +
  labs(x = "Temp at 9am", y = "Temp at 3pm", color = "Location")
```

::: callout-note
Spatial Viz:
:::
```{r}
# Import starbucks  data
starbucks <- read.csv("https://mac-stat.github.io/data/starbucks.csv")
states_map <- map_data("state")
starbucks_us_by_state <- starbucks |>
  filter(Country == "US") |>
  count(State.Province) |>
  mutate(state_name = str_to_lower(abbr2state(State.Province)))
census_pop_est_2018 <- read_csv("https://mac-stat.github.io/data/us_census_2018_state_pop_est.csv") |>
  separate(state, into = c("dot", "state"), extra = "merge") |>
  select(-dot) |>
  mutate(state = str_to_lower(state))
starbucks_with_2018_pop_est <-
  starbucks_us_by_state |>
  left_join(census_pop_est_2018,
    by = c("state_name" = "state")
  ) |>
  mutate(starbucks_per_10000 = (n / est_pop_2018) * 10000)
starbucks_contiguous_us <- starbucks |>
  filter(Country == "US", State.Province != "AK", State.Province != "HI")

#Creating map of Starbucks locations, and density of Starbucks per population
ggplot(starbucks_with_2018_pop_est) +
  geom_map(map = states_map, aes(map_id = state_name, fill = starbucks_per_10000)) +
  expand_limits(x = states_map$long, y = states_map$lat) +
  theme_map() +
  scale_fill_gradientn(name = "Starbucks Per 10000 People", colors = c("darkgreen", "green", "lightgreen"), values = scales::rescale(seq(0, 100, by = 5))) +
  geom_point(
    data = starbucks_contiguous_us,
    aes(x = Longitude, y = Latitude),
    alpha = 0.3, size = 0.2, color = "blue"
  ) +
  theme_map()

  labs(title = "Starbucks in the United States")
  #| fig-cap: "By Colette Lawler"
```

